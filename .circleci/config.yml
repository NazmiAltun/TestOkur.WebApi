version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
defaults: &defaults
  working_directory: ~/repo
  machine: true
jobs:
  static-code-analysis:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Sonar Scan
          command: |
            docker run -it --rm -v $(pwd):/source  nosinovacao/dotnet-sonar:latest bash -c "cd source \
            && dotnet --roll-forward /sonar-scanner/SonarScanner.MSBuild.dll  begin /k:NazmiAltun_TestOkur.WebApi /o:nazmialtun-github /d:sonar.login='$SONAR_LOGIN' /d:sonar.host.url="https://sonarcloud.io"  /name:$CIRCLE_PROJECT_REPONAME /version:$CIRCLE_BUILD_NUM \
            && dotnet restore \
            && dotnet build -c Release \
            && dotnet --roll-forward /sonar-scanner/SonarScanner.MSBuild.dll  end  /d:sonar.login='$SONAR_LOGIN'"
  unit-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run Tests
          command: |
            mkdir ~/repo/coverage
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit domain-unit-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit notification-unit-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit webapi-unit-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit report-unit-test
      - persist_to_workspace:
          root: ~/repo
          paths:
            - coverage/*
  notification-report-integration-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run
          command: |
            mkdir ~/repo/coverage
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit notification-integration-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit report-integration-test
      - persist_to_workspace:
          root: ~/repo
          paths:
            - coverage/*
  webapi-integration-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run
          command: |
            mkdir ~/repo/coverage
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit webapi-integration-test
      - persist_to_workspace:
          root: ~/repo
          paths:
            - coverage/*
  code-coverage:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Merge Coverage Reports
          command: |
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit coverage-merger
      - codecov/upload:
          file: ./coverage/Cobertura.xml
  build-webapi:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Image
          command: |
            docker-compose build webapi
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
                docker tag testokur-webapi:latest nazmialtun/testokur-webapi:$IMAGE_TAG
                docker tag testokur-webapi:latest nazmialtun/testokur-webapi:latest
                docker push nazmialtun/testokur-webapi:latest
                docker push nazmialtun/testokur-webapi:$IMAGE_TAG
      - persist_to_workspace:
          root: .
          paths:
            - deploy/*
  build-report:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Image
          command: |
            docker-compose build report
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
                docker tag testokur-report:latest nazmialtun/testokur-report:$IMAGE_TAG
                docker tag testokur-report:latest nazmialtun/testokur-report:latest
                docker push nazmialtun/testokur-report:latest
                docker push nazmialtun/testokur-report:$IMAGE_TAG
      - persist_to_workspace:
          root: .
          paths:
            - deploy/*
  build-notification:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Image
          command: |
            docker-compose build notification
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
                docker tag testokur-notification:latest nazmialtun/testokur-notification:$IMAGE_TAG
                docker tag testokur-notification:latest nazmialtun/testokur-notification:latest
                docker push nazmialtun/testokur-notification:latest
                docker push nazmialtun/testokur-notification:$IMAGE_TAG
      - persist_to_workspace:
          root: .
          paths:
            - deploy/*
  deploy-webapi-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$QA_SERVER 'bash -s' < deploy/webapi-qa.sh > /dev/null
  deploy-report-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$QA_SERVER 'bash -s' < deploy/report-qa.sh > /dev/null
  deploy-notification-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$QA_SERVER 'bash -s' < deploy/notification-qa.sh > /dev/null
  deploy-webapi-prod:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$PROD_SERVER 'bash -s' < deploy/webapi-prod.sh > /dev/null
  deploy-report-prod:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$PROD_SERVER 'bash -s' < deploy/report-prod.sh > /dev/null
  deploy-notification-prod:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$PROD_SERVER 'bash -s' < deploy/notification-prod.sh > /dev/null
  clean-up-qa:
    <<: *defaults
    steps:
      - run:
          name: Prune docker images/containers
          command: |
            ssh  $SSH_USERNAME@$QA_SERVER 'echo Y | docker system prune'
  clean-up-prod:
   <<: *defaults
   steps:
      - run:
          name: Prune docker images/containers
          command: |
            ssh  $SSH_USERNAME@$PROD_SERVER 'echo Y | docker system prune'
  clear-cache-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Clear Cache
          command: |
            chmod +x deploy/retry.sh
            deploy/retry.sh $WEBAPI_QA_URL/api/cache
  clear-cache-prod:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Clear Cache
          command: |
            chmod +x deploy/retry.sh
            deploy/retry.sh $WEBAPI_URL/api/cache?key=$APP_KEY
workflows:
  version: 2  
  deploy-qa:
    jobs:
      - static-code-analysis
      - unit-tests
      - notification-report-integration-tests
      - webapi-integration-tests
      - code-coverage:
          requires:
            - static-code-analysis
            - unit-tests
            - notification-report-integration-tests
            - webapi-integration-tests
      - build-webapi:
          requires:
            - webapi-integration-tests
            - unit-tests
            - static-code-analysis
      - build-notification:
          requires:
            - unit-tests
            - static-code-analysis
            - notification-report-integration-tests
      - build-report:
          requires:
            - unit-tests
            - static-code-analysis
            - notification-report-integration-tests
  deploy-prod:
    jobs:
      - deploy-webapi-prod:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-notification-prod:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-report-prod:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - clear-cache-prod:
          requires:
            - deploy-webapi-prod
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - clean-up-prod:
          requires:
            - deploy-webapi-prod
            - deploy-notification-prod
            - deploy-report-prod
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
