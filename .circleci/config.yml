version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
defaults: &defaults
  working_directory: ~/repo
  machine: true
jobs:
  static-code-analysis:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Sonar Scan
          command: |
            docker run -it --rm -v $(pwd):/source  nosinovacao/dotnet-sonar:latest bash -c "cd source \
            && dotnet /sonar-scanner/SonarScanner.MSBuild.dll begin /k:NazmiAltun_TestOkur.WebApi /o:nazmialtun-github /d:sonar.login='$SONAR_LOGIN' /d:sonar.host.url="https://sonarcloud.io"  /name:$CIRCLE_PROJECT_REPONAME /version:$CIRCLE_BUILD_NUM \
            && dotnet restore \
            && dotnet build -c Release \
            && dotnet /sonar-scanner/SonarScanner.MSBuild.dll end  /d:sonar.login='$SONAR_LOGIN'"
  unit-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run Tests
          command: |
            mkdir -p coverage
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit domain-unit-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit notification-unit-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit webapi-unit-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit report-unit-test
            ls coverage
      - persist_to_workspace:
          root: ~/repo/coverage
          paths:
            - coverage/*
  notification-report-integration-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run
          command: |
            mkdir -p coverage
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit notification-integration-test
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit report-integration-test
            ls coverage
      - persist_to_workspace:
          root: ~/repo/coverage
          paths:
            - coverage/*
  webapi-integration-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run
          command: |
            mkdir coverage
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit webapi-integration-test
            ls coverage
      - persist_to_workspace:
          root: ~/repo/coverage
          paths:
            - coverage/*
  code-coverage:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/coverage
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Merge Coverage Reports
          command: |
            docker-compose -f docker-compose.tests.yml up --build --abort-on-container-exit coverage-merger
      - codecov/upload:
          file: /coverage/Cobertura.xml
  build-webapi:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Image
          command: |
            docker-compose build webapi
      - run:
          name: Compress Images
          command: |
            docker save -o webapi.tar testokur-webapi:latest
      - persist_to_workspace:
          root: .
          paths:
            - webapi.tar
            - deploy/webapi-qa.sh 
            - deploy/webapi-prod.sh 
  build-report:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Image
          command: |
            docker-compose build report
      - run:
          name: Compress Images
          command: |
            docker save -o report.tar testokur-report:latest
      - persist_to_workspace:
          root: .
          paths:
            - report.tar
            - deploy/report-qa.sh 
            - deploy/report-prod.sh 
  build-notification:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Build Image
          command: |
            docker-compose build notification
      - run:
          name: Compress Images
          command: |
            docker save -o notification.tar testokur-notification:latest
      - persist_to_workspace:
          root: .
          paths:
            - notification.tar
            - deploy/notification-qa.sh 
            - deploy/notification-prod.sh
  deploy-webapi-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Copy image to the app server
          command: |
            scp -q webapi.tar $SSH_USERNAME@$SSH_HOST:/home/docker-images/
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$SSH_HOST 'bash -s' < deploy/webapi-qa.sh > /dev/null
  deploy-report-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Copy image to the app server
          command: |
            scp -q report.tar $SSH_USERNAME@$SSH_HOST:/home/docker-images/
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$SSH_HOST 'bash -s' < deploy/report-qa.sh > /dev/null
  deploy-notification-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Copy image to the app server
          command: |
            scp -q notification.tar $SSH_USERNAME@$SSH_HOST:/home/docker-images/
      - run:
          name: Run container
          command: |
            ssh  $SSH_USERNAME@$SSH_HOST 'bash -s' < deploy/notification-qa.sh > /dev/null
  clear-cache:
    <<: *defaults
    steps:
      - run:
          name: Clear Cache
          command: |
            curl -X "DELETE" $WEBAPI_QA_URL/api/cache
workflows:
  version: 2
  webapi:
    jobs:
      - static-code-analysis:
          filters:
            tags:
              only: /.*/
      - unit-tests:
          filters:
            tags:
              only: /.*/
      - notification-report-integration-tests:
          filters:
            tags:
              only: /.*/
      - webapi-integration-tests:
          filters:
            tags:
              only: /.*/
      - code-coverage:
          requires:
            - static-code-analysis
            - unit-tests
            - notification-report-integration-tests
            - webapi-integration-tests
      - build-webapi:
          requires:
            - code-coverage
      - build-notification:
          requires:
            - code-coverage
      - build-report:
          requires:
            - code-coverage
      - deploy-webapi-qa:
          requires:
            - build-webapi
          filters:
            branches:
              only: master
      - deploy-notification-qa:
          requires:
            - build-notification
          filters:
            branches:
              only: master
      - deploy-report-qa:
          requires:
            - build-report
          filters:
            branches:
              only: master
      - clear-cache:
          requires:
            - deploy-webapi-qa